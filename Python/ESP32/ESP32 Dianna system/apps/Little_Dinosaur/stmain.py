import json
import time
import random

class DINOSAUR:
    
    def __init__(self):
        self.jump_state = False
        self.y_axis = 0
        self.acceleration = 9.8
        self.appearance = []
        self.appearance_lab = {
            "run1":[[20, 33], [21, 33], [22, 33], [23, 33], [24, 33], [25, 33], [26, 33], [27, 33], [20, 34], [23, 34], [24, 34], [25, 34], [26, 34], [27, 34], [28, 34], [20, 35], [23, 35], [24, 35], [25, 35], [26, 35], [27, 35], [28, 35], [20, 36], [21, 36], [22, 36], [23, 36], [24, 36], [25, 36], [26, 36], [27, 36], [28, 36], [20, 37], [21, 37], [22, 37], [23, 37], [24, 37], [25, 37], [26, 37], [27, 37], [28, 37], [20, 38], [21, 38], [22, 38], [23, 38], [20, 39], [21, 39], [22, 39], [23, 39], [24, 39], [25, 39], [19, 40], [20, 40], [21, 40], [22, 40], [23, 40], [24, 40], [25, 40], [26, 40], [18, 41], [19, 41], [20, 41], [21, 41], [22, 41], [10, 42], [17, 42], [18, 42], [19, 42], [20, 42], [21, 42], [22, 42], [23, 42], [10, 43], [11, 43], [15, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [23, 43], [24, 43], [25, 43], [10, 44], [11, 44], [12, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [10, 45], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [15, 50], [16, 50], [19, 50], [20, 50], [15, 51], [15, 52], [15, 53]],
            "run2":[[19, 33], [20, 33], [21, 33], [22, 33], [23, 33], [24, 33], [25, 33], [26, 33], [27, 33], [19, 34], [22, 34], [23, 34], [24, 34], [25, 34], [26, 34], [27, 34], [19, 35], [20, 35], [21, 35], [22, 35], [23, 35], [24, 35], [25, 35], [26, 35], [27, 35], [19, 36], [20, 36], [21, 36], [22, 36], [23, 36], [24, 36], [25, 36], [26, 36], [27, 36], [19, 37], [20, 37], [21, 37], [22, 37], [23, 37], [24, 37], [25, 37], [26, 37], [27, 37], [19, 38], [20, 38], [21, 38], [22, 38], [19, 39], [20, 39], [21, 39], [22, 39], [23, 39], [24, 39], [25, 39], [18, 40], [19, 40], [20, 40], [21, 40], [16, 41], [17, 41], [18, 41], [19, 41], [20, 41], [21, 41], [9, 42], [15, 42], [16, 42], [17, 42], [18, 42], [19, 42], [20, 42], [21, 42], [22, 42], [23, 42], [9, 43], [10, 43], [14, 43], [15, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [9, 44], [10, 44], [11, 44], [12, 44], [13, 44], [14, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [9, 45], [10, 45], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [10, 46], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [11, 47], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [12, 48], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [13, 49], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [14, 50], [18, 50], [14, 51], [15, 51], [18, 51], [19, 51], [18, 52], [19, 52], [19, 53]],
            "fast_runing1":[[8, 42], [28, 42], [29, 42], [30, 42], [31, 42], [32, 42], [33, 42], [34, 42], [8, 43], [9, 43], [10, 43], [15, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [23, 43], [27, 43], [30, 43], [31, 43], [32, 43], [33, 43], [34, 43], [35, 43], [8, 44], [9, 44], [10, 44], [11, 44], [12, 44], [13, 44], [14, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [23, 44], [24, 44], [25, 44], [26, 44], [27, 44], [30, 44], [31, 44], [32, 44], [33, 44], [34, 44], [35, 44], [36, 44], [9, 45], [10, 45], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [23, 45], [24, 45], [25, 45], [26, 45], [27, 45], [28, 45], [29, 45], [30, 45], [31, 45], [32, 45], [33, 45], [34, 45], [35, 45], [36, 45], [10, 46], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [23, 46], [24, 46], [25, 46], [26, 46], [27, 46], [28, 46], [29, 46], [30, 46], [31, 46], [32, 46], [33, 46], [34, 46], [35, 46], [36, 46], [11, 47], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [22, 47], [23, 47], [24, 47], [25, 47], [26, 47], [27, 47], [28, 47], [29, 47], [30, 47], [31, 47], [32, 47], [33, 47], [34, 47], [35, 47], [36, 47], [12, 48], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [21, 48], [22, 48], [23, 48], [24, 48], [25, 48], [26, 48], [27, 48], [28, 48], [29, 48], [30, 48], [13, 49], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [21, 49], [22, 49], [23, 49], [24, 49], [28, 49], [29, 49], [30, 49], [31, 49], [32, 49], [33, 49], [14, 50], [15, 50], [16, 50], [17, 50], [18, 50], [19, 50], [20, 50], [23, 50], [17, 51], [18, 51], [19, 51], [23, 51], [14, 52], [17, 52], [18, 52], [24, 52], [17, 53], [17, 54]],
            "fast_runing2":[[8, 42], [27, 42], [28, 42], [33, 42], [8, 43], [9, 43], [10, 43], [15, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [26, 43], [27, 43], [28, 43], [29, 43], [30, 43], [31, 43], [32, 43], [33, 43], [34, 43], [8, 44], [9, 44], [10, 44], [11, 44], [12, 44], [13, 44], [14, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [23, 44], [24, 44], [25, 44], [26, 44], [29, 44], [30, 44], [31, 44], [32, 44], [33, 44], [34, 44], [35, 44], [9, 45], [10, 45], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [23, 45], [24, 45], [25, 45], [26, 45], [27, 45], [28, 45], [29, 45], [30, 45], [31, 45], [32, 45], [33, 45], [34, 45], [35, 45], [10, 46], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [23, 46], [24, 46], [25, 46], [26, 46], [27, 46], [28, 46], [29, 46], [30, 46], [31, 46], [32, 46], [33, 46], [34, 46], [35, 46], [11, 47], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [22, 47], [23, 47], [24, 47], [25, 47], [26, 47], [27, 47], [28, 47], [29, 47], [30, 47], [33, 47], [34, 47], [12, 48], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [21, 48], [22, 48], [23, 48], [24, 48], [25, 48], [26, 48], [27, 48], [28, 48], [29, 48], [30, 48], [13, 49], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [21, 49], [22, 49], [23, 49], [27, 49], [28, 49], [29, 49], [30, 49], [31, 49], [32, 49], [14, 50], [15, 50], [16, 50], [17, 50], [18, 50], [19, 50], [14, 51], [15, 51], [19, 51], [23, 51], [14, 52], [14, 54]],
            "cry":[[0, 0], [20, 33], [21, 33], [22, 33], [23, 33], [24, 33], [25, 33], [26, 33], [27, 33], [28, 33], [20, 34], [24, 34], [25, 34], [26, 34], [27, 34], [28, 34], [29, 34], [20, 35], [24, 35], [25, 35], [26, 35], [27, 35], [28, 35], [29, 35], [20, 36], [24, 36], [25, 36], [26, 36], [27, 36], [28, 36], [29, 36], [20, 37], [21, 37], [22, 37], [23, 37], [24, 37], [25, 37], [26, 37], [27, 37], [28, 37], [29, 37], [20, 38], [21, 38], [22, 38], [23, 38], [24, 38], [25, 38], [26, 38], [27, 38], [28, 38], [29, 38], [20, 39], [21, 39], [22, 39], [23, 39], [24, 39], [25, 39], [26, 39], [27, 39], [20, 40], [21, 40], [22, 40], [23, 40], [9, 41], [19, 41], [20, 41], [21, 41], [22, 41], [9, 42], [17, 42], [18, 42], [19, 42], [20, 42], [21, 42], [22, 42], [23, 42], [9, 43], [10, 43], [15, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [23, 43], [24, 43], [25, 43], [9, 44], [10, 44], [11, 44], [14, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [9, 45], [10, 45], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [10, 46], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [11, 47], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [12, 48], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [21, 48], [13, 49], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [14, 50], [15, 50], [16, 50], [17, 50], [18, 50], [19, 50], [15, 51], [16, 51], [19, 51], [15, 52], [15, 54], [20, 54]],
            "stop":[[0, 0], [22, 33], [23, 33], [24, 33], [25, 33], [26, 33], [27, 33], [28, 33], [29, 33], [21, 34], [22, 34], [24, 34], [25, 34], [26, 34], [27, 34], [28, 34], [29, 34], [30, 34], [21, 35], [22, 35], [24, 35], [25, 35], [26, 35], [27, 35], [28, 35], [29, 35], [30, 35], [21, 36], [22, 36], [23, 36], [24, 36], [25, 36], [26, 36], [27, 36], [28, 36], [29, 36], [30, 36], [21, 37], [22, 37], [23, 37], [24, 37], [25, 37], [26, 37], [27, 37], [28, 37], [29, 37], [30, 37], [21, 38], [22, 38], [23, 38], [24, 38], [25, 38], [21, 39], [22, 39], [23, 39], [24, 39], [25, 39], [21, 40], [22, 40], [23, 40], [24, 40], [20, 41], [21, 41], [22, 41], [23, 41], [24, 41], [11, 42], [19, 42], [20, 42], [21, 42], [22, 42], [23, 42], [24, 42], [11, 43], [12, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [23, 43], [24, 43], [25, 43], [26, 43], [11, 44], [12, 44], [13, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [23, 44], [24, 44], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [23, 45], [24, 45], [11, 46], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [23, 46], [24, 46], [12, 47], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [22, 47], [23, 47], [13, 48], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [21, 48], [22, 48], [14, 49], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [21, 49], [15, 50], [16, 50], [17, 50], [18, 50], [19, 50], [20, 50], [21, 50], [16, 51], [17, 51], [20, 51], [21, 51], [16, 52], [21, 52], [16, 53], [21, 53], [16, 54], [21, 54]],
            "close_eyes":[[0, 0], [22, 33], [23, 33], [24, 33], [25, 33], [26, 33], [27, 33], [28, 33], [21, 34], [22, 34], [23, 34], [24, 34], [25, 34], [26, 34], [27, 34], [28, 34], [29, 34], [21, 35], [22, 35], [23, 35], [24, 35], [25, 35], [26, 35], [27, 35], [28, 35], [29, 35], [21, 36], [22, 36], [23, 36], [24, 36], [25, 36], [26, 36], [27, 36], [28, 36], [29, 36], [21, 37], [22, 37], [23, 37], [24, 37], [25, 37], [26, 37], [27, 37], [28, 37], [29, 37], [21, 38], [22, 38], [23, 38], [24, 38], [21, 39], [22, 39], [23, 39], [24, 39], [20, 40], [21, 40], [22, 40], [23, 40], [19, 41], [20, 41], [21, 41], [22, 41], [23, 41], [11, 42], [17, 42], [18, 42], [19, 42], [20, 42], [21, 42], [22, 42], [23, 42], [24, 42], [25, 42], [11, 43], [12, 43], [16, 43], [17, 43], [18, 43], [19, 43], [20, 43], [21, 43], [22, 43], [23, 43], [25, 43], [11, 44], [12, 44], [13, 44], [15, 44], [16, 44], [17, 44], [18, 44], [19, 44], [20, 44], [21, 44], [22, 44], [23, 44], [11, 45], [12, 45], [13, 45], [14, 45], [15, 45], [16, 45], [17, 45], [18, 45], [19, 45], [20, 45], [21, 45], [22, 45], [23, 45], [12, 46], [13, 46], [14, 46], [15, 46], [16, 46], [17, 46], [18, 46], [19, 46], [20, 46], [21, 46], [22, 46], [23, 46], [13, 47], [14, 47], [15, 47], [16, 47], [17, 47], [18, 47], [19, 47], [20, 47], [21, 47], [22, 47], [14, 48], [15, 48], [16, 48], [17, 48], [18, 48], [19, 48], [20, 48], [21, 48], [15, 49], [16, 49], [17, 49], [18, 49], [19, 49], [20, 49], [16, 50], [17, 50], [20, 50], [16, 51], [16, 53], [21, 53]]
        }

    def jump(self):
        pass


class GROUND:
    
    def __init__(self):
        self.x_axis = 0
        self.y_axis = 0
        self.out_put = []
        self.speed = 1
        self.map_lab = []

    def init_old(self):
        map_data = []
        with open("/apps/Little_Dinosaur/map.json") as zx:
            map_data = json.load(zx)

    def init_map(self):
        for x_axis in range(128):
            self.
        random.randint(11, 20)

    def update_location(self):
        



        


'''
class OBSTACLE:
    
    def __init__(self):
        self.x_axis = 0
        self.y_axis = 0

    def get_location(self):
'''     

class APP:
    def __init__(self):
        self.esp_machine = None

    def start(self):

        run = []
        with open("/apps/Little_Dinosaur/running1.json") as zx:
            img1 = json.load(zx)
        img2 = []
        with open("/apps/Little_Dinosaur/running2.json") as zx:
            img2 = json.load(zx)
        img3 = []
        with open("/apps/Little_Dinosaur/fast_runing1.json") as zx:
            img3 = json.load(zx)
        img4 = []
        with open("/apps/Little_Dinosaur/fast_runing2.json") as zx:
            img4 = json.load(zx)
        

        action_state = 0
        while True:
            state, value = self.esp_machine.get_gpio_change()
            if state:
                if value == "in":
                    pass
                if value == "select":
                    pass
                if value == "out":
                    break
                time.sleep(0.2)
                
            if action_state == 0:
                action_state = 1
                self.esp_machine.oled1.fill(0)
                for pix in img1:
                    self.esp_machine.oled1.pixel(pix[0], pix[1], 1)
                self.esp_machine.oled1.show()

                self.esp_machine.oled2.fill(0)
                for pix in img4:
                    self.esp_machine.oled2.pixel(pix[0], pix[1], 1)
                self.esp_machine.oled2.show()
            else:
                action_state = 0
                self.esp_machine.oled1.fill(0)
                for pix in img2:
                    self.esp_machine.oled1.pixel(pix[0], pix[1], 1)
                self.esp_machine.oled1.show()

                self.esp_machine.oled2.fill(0)
                for pix in img3:
                    self.esp_machine.oled2.pixel(pix[0], pix[1], 1)
                self.esp_machine.oled2.show()
        
